generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int       @id @default(autoincrement())
  name         String
  email        String    @unique
  passwordHash String
  createdAt    DateTime  @default(now())

  posts        Post[]
  comments     Comment[]
  postVotes    PostVote[]
  commentVotes CommentVote[]
}

model Post {
  id        Int       @id @default(autoincrement())
  title     String
  content   String
  createdAt DateTime  @default(now())
  authorId  Int
  author    User      @relation(fields: [authorId], references: [id])
  comments  Comment[]
  votes     PostVote[]
}

model Comment {
  id        Int       @id @default(autoincrement())
  content   String
  createdAt DateTime  @default(now())
  postId    Int
  authorId  Int
  post      Post      @relation(fields: [postId], references: [id])
  author    User      @relation(fields: [authorId], references: [id])
  votes     CommentVote[]
}

model PostVote {
  id        Int       @id @default(autoincrement())
  voteType  VoteType
  createdAt DateTime  @default(now())
  postId    Int
  userId    Int
  post      Post      @relation(fields: [postId], references: [id])
  user      User      @relation(fields: [userId], references: [id])

  @@unique([postId, userId])
}

model CommentVote {
  id         Int      @id @default(autoincrement())
  voteType   VoteType
  createdAt  DateTime @default(now())
  commentId  Int
  userId     Int
  comment    Comment  @relation(fields: [commentId], references: [id])
  user       User     @relation(fields: [userId], references: [id])

  @@unique([commentId, userId])
}

enum VoteType {
  upvote
  downvote
}
